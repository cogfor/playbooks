---
- name: base sources
  apt_repository: repo="{{ item }}" state=present
  with_items:
  - deb http://cdn.debian.net/debian/ wheezy main
  - deb http://security.debian.org/ wheezy/updates main
  - deb http://cdn.debian.net/debian/ wheezy-updates main

- name: iptables config
  template: src=iptables.j2 dest=/etc/iptables.rules

- name: activate iptables config
  shell: iptables-restore < /etc/iptables.rules

- name: auto iptables restore
  template: src=iptables_restore.j2 dest=/etc/network/if-pre-up.d/iptables

- name: auto iptables save
  template: src=iptables_save.j2 dest=/etc/network/if-post-down.d/iptables

- name: automatic upgrades
  template: src=20auto-upgrades.j2 dest=/etc/apt/apt.conf.d/20auto-upgrades

- name: base packages
  apt: pkg={{ item }} state=latest update_cache=yes
  with_items:
  - automake
  - build-essential
  - curl
  - git
  - htop
  - mercurial
  - molly-guard
  - pkg-config
  - sudo
  - unattended-upgrades
  - vim
  - zsh

- name: create users
  user: name={{ item.username }} shell={{ item.shell }} comment="{{ item.full_name }}" generate_ssh_key=yes
  with_items: users
  when: env in item.env

- name: add authorised keys
  authorized_key: user={{ item.0.username }} key="{{ item.1 }}" 
  with_subelements:
  - users
  - key
  when: env in item.0.env

- name: add root authorised keys
  authorized_key: user=root key="{{ item.1 }}" 
  with_subelements:
  - users
  - key
  when: (env in item.0.env) and item.0.root_access

- name: get rid of libnss-mdns
  apt: pkg=libnss-mdns state=absent

- name: allow wheel to sudo
  template: src=sudoers.j2 dest=/etc/sudoers

- name: secure sshd config
  template: src=sshd_config.j2 dest=/etc/ssh/sshd_config
  notify:
  - restart ssh
- action: file path=/srv state=directory mode=711
